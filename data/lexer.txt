D			[0-9]
L			[a-zA-Z_]
H			[a-fA-F0-9]
E			[Ee][+-]?{D}+
FS			(f|F|l|L)
IS			(u|U|l|L)*


"/*"			__comment

"auto"			AUTO
"break"			BREAK
"case"			CASE
"char"			CHAR
"const"			CONST
"continue"		CONTINUE
"default"		DEFAULT
"do"			DO
"double"		DOUBLE
"else"			ELSE
"enum"			ENUM
"extern"		EXTERN
"float"			FLOAT
"for"			FOR
"goto"			GOTO
"if"			IF
"int"			INT
"long"			LONG
"register"		REGISTER
"return"		RETURN
"short"			SHORT
"signed"		SIGNED
"sizeof"		SIZEOF
"static"		STATIC
"struct"		STRUCT
"switch"		SWITCH
"typedef"		TYPEDEF
"union"			UNION
"unsigned"		UNSIGNED
"void"			VOID
"volatile"		VOLATILE
"while"			WHILE


0[xX]{H}+{IS}?		CONSTANT
0{D}+{IS}?		CONSTANT
{D}+{IS}?		CONSTANT
L?'(\\.|[^\\'])+'	CONSTANT

{D}+{E}{FS}?		CONSTANT
{D}*"."{D}+({E})?{FS}?	CONSTANT
{D}+"."{D}*({E})?{FS}?	CONSTANT

L?\"(\\.|[^\\"])*\"	STRING_LITERAL

"..."			ELLIPSIS
">>="			RIGHT_ASSIGN
"<<="			LEFT_ASSIGN
"+="			ADD_ASSIGN
"-="			SUB_ASSIGN
"*="			MUL_ASSIGN
"/="			DIV_ASSIGN
"%="			MOD_ASSIGN
"&="			AND_ASSIGN
"^="			XOR_ASSIGN
"|="			OR_ASSIGN
">>"			RIGHT_OP
"<<"			LEFT_OP
"++"			INC_OP
"--"			DEC_OP
"->"			PTR_OP
"&&"			AND_OP
"||"			OR_OP
"<="			LE_OP
">="			GE_OP
"=="			EQ_OP
"!="			NE_OP
";"			';'
("{"|"<%")		'{'
("}"|"%>")		'}'
","			','
":"			':'
"="			'='
"("			'('
")"			')'
("["|"<:")		'['
("]"|":>")		']'
"."			'.'
"&"			'&'
"!"			'!'
"~"			'~'
"-"			'-'
"+"			'+'
"*"			'*'
"/"			'/'
"%"			'%'
"<"			'<'
">"			'>'
"^"			'^'
"|"			'|'
"?"			'?'
